{"ast":null,"code":"var _jsxFileName = \"/Users/anilaltuncu/OnlyBilkentSon2/OnlyBilkent/fronted/src/components/layout/dashboardMock.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getLoanPost, getPost, getImage } from '../../api/axiosConfig';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [postData, setPostData] = useState([]);\n  const [imageData, setImageData] = useState([]);\n  const [loanPostData, setLoanPostData] = useState([]);\n  const {\n    postId\n  } = useParams();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchSellingPosts = async () => {\n      try {\n        const response = await getLoanPost();\n        setPosts(response.data);\n      } catch (error) {\n        console.error('Error fetching selling posts:', error);\n        // Handle error appropriately\n      }\n    };\n    fetchSellingPosts();\n  }, []); // Add dependencies if needed\n\n  useEffect(() => {\n    getPostId(posts).then(response => {\n      setPostIdData(response.data);\n    }).catch(error => {\n      console.error('There was an error fetching the post data:', error);\n    });\n  }, [postId]);\n  console.log(loanPostData.postId);\n  const imageId = postData === null || postData === void 0 ? void 0 : postData.imageId;\n  useEffect(() => {\n    const fetchImage = async () => {\n      try {\n        const response = await getImage(imageId);\n        setImageData(response.data); // Assume response.data is the array of posts\n      } catch (error) {\n        console.error('Error fetching image:', error);\n        // Handle error appropriately\n      }\n    };\n    fetchImage();\n  }, []);\n  console.log(imageId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Selling Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), post.imageBase64 && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `data:image/jpeg;base64,${post.imageBase64}`,\n          alt: post.title,\n          style: {\n            maxWidth: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"iwx8uZ53tXXbo0QpBinG1++GMnk=\", false, function () {\n  return [useParams];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","getLoanPost","getPost","getImage","useParams","jsxDEV","_jsxDEV","Dashboard","_s","postData","setPostData","imageData","setImageData","loanPostData","setLoanPostData","postId","posts","setPosts","fetchSellingPosts","response","data","error","console","getPostId","then","setPostIdData","catch","log","imageId","fetchImage","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","post","title","content","imageBase64","src","alt","style","maxWidth","id","_c","$RefreshReg$"],"sources":["/Users/anilaltuncu/OnlyBilkentSon2/OnlyBilkent/fronted/src/components/layout/dashboardMock.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getLoanPost, getPost, getImage } from '../../api/axiosConfig';\nimport { useParams } from 'react-router-dom';\n\n\nconst Dashboard = () => {\n    const [postData, setPostData] = useState([]);\n    const [imageData, setImageData] = useState([]);\n    const [loanPostData, setLoanPostData] = useState([]);\n    const { postId } = useParams();\n    const [posts, setPosts] = useState([]);\n    useEffect(() => {\n        const fetchSellingPosts = async () => {\n            try {\n                const response = await getLoanPost();\n                setPosts(response.data);\n            } catch (error) {\n                console.error('Error fetching selling posts:', error);\n                // Handle error appropriately\n            }\n        };\n    \n        fetchSellingPosts();\n    }, []); // Add dependencies if needed\n    \n\n     useEffect(() => {\n        getPostId(posts)\n      .then(response => {\n        setPostIdData(response.data);\n      })\n      .catch(error => {\n        console.error('There was an error fetching the post data:', error);\n      });\n    }, [postId]);\n\n    console.log(loanPostData.postId);\n    const imageId = postData?.imageId;\n\n    useEffect(() => {\n        const fetchImage = async () => {\n            try {\n                const response = await getImage(imageId);\n                setImageData(response.data); // Assume response.data is the array of posts\n            } catch (error) {\n                console.error('Error fetching image:', error);\n                // Handle error appropriately\n            }\n        };\n\n        fetchImage();\n    }, []);\n\n    console.log(imageId);\n\n\n\n\n    return (\n        <div>\n            <h1>Selling Posts</h1>\n            <div className=\"posts-container\">\n                {posts.map(post => (\n                    <div key={post.id} className=\"post\">\n                        <h2>{post.title}</h2>\n                        <p>{post.content}</p>\n                        {post.imageBase64 && (\n                            <img src={`data:image/jpeg;base64,${post.imageBase64}`} alt={post.title} style={{ maxWidth: '100%' }} />\n                        )}\n                        {/* Additional post details here */}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}