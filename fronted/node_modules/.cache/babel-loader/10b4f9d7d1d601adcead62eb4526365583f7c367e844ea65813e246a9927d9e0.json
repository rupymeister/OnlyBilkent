{"ast":null,"code":"import axios from 'axios';\nexport const baseURL = 'http://localhost:8080';\nconst api = axios.create({\n  baseURL: baseURL\n});\n\n// Login / Logout\nexport const userLoginAsStudent = (email, password) => axios.post(`${baseURL}/api/login/asStudent`, {\n  email,\n  password\n});\nexport const userLoginAsBoard = (email, password) => axios.post(`${baseURL}/api/login/asBoard`, {\n  email,\n  password\n});\nexport const userLoginAsAdmin = (email, password) => axios.post(`${baseURL}/api/login/asAdmin`, {\n  email,\n  password\n});\nexport const userLogout = (authType, id) => axios.post(`${baseURL}/user/logout`);\nexport const adminLogout = () => axios.post(`${baseURL}/admin/logout`);\nexport const boardLogout = () => axios.post(`${baseURL}/board/logout`);\n\n//User Registartion\nexport const userRegister = (email, password, name, surname, bio) => axios.post(`${baseURL}/registration/userReg`, {\n  email,\n  password,\n  name,\n  surname,\n  bio\n});\nexport const verifyUser = (verificationCode, email) => axios.post(`${baseURL}/registration/confirm`, null, {\n  params: {\n    token: verificationCode,\n    email\n  }\n});\n\n// User info\nexport const getUser = id => axios.get(`${baseURL}/users/${id}`);\nexport const getPost = postId => axios.get(`${baseURL}/posts/${postId}`);\nexport const getImage = imageId => axios.get(`${baseURL}/image1/${imageId}`);\nexport const updateUser = (userId, name, surname, password, bio) => {\n  const url = `http://localhost:8080/users/editUser/${userId}`;\n  console.log(password);\n  const data = {\n    name,\n    surname,\n    password,\n    bio\n  };\n\n  // Assuming you're using Axios for HTTP requests\n  return axios.post(url, data);\n};\n\n// BoardAccounts\nexport const getBoards = () => axios.get(`${baseURL}/clubs`);\nexport const createBoard = (userId, clubId, clubName) => axios.post(`${baseURL}/clubs/create`, {\n  userId,\n  clubId,\n  clubName\n});\n\n// User Posts\nexport const createPost = (postType, userId) => axios.post(`${baseURL}/posts/create/${userId}`, {\n  postType,\n  userId\n});\nexport const createSellPost = (postId, formData) => axios.put(`${baseURL}/posts/createSalePost/${postId}`, formData, {\n  headers: {\n    'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryqfDZNbBopJT4MiqA;charset=UTF-8'\n  }\n});\nexport const createLostPost = (postId, postContent, image, title, type) => axios.post(`${baseURL}/posts/createLostPost/${postId}`, {\n  postId,\n  postContent,\n  image,\n  title,\n  type\n});\nexport const createFoundPost = (postId, postContent, image, title, type) => axios.post(`${baseURL}/posts/createFoundPost/${postId}`, {\n  postId,\n  postContent,\n  image,\n  title,\n  type\n});\nexport const createLoanPost = (postId, title, content, category, loanPricePerTime) => axios.put(`${baseURL}/posts/createLoanPost/${postId}`, {\n  postId,\n  title,\n  content,\n  category,\n  loanPricePerTime\n});\nexport const createFreePost = (postId, postContent, image, title, type) => axios.post(`${baseURL}/posts/createFreePost/${postId}`, {\n  postId,\n  postContent,\n  image,\n  title,\n  type\n});\nexport const getUserPosts = userId => axios.get(`${baseURL}/posts/user/${userId}`);\n\n// Notifications\nexport const getNotifications = id => axios.get(`${baseURL}/notification/user/${id}`);\nexport const markAsReadNotification = id => axios.post(`${baseURL}/notification/markRead/${id}`);\n\n// Announcements\nexport const createAnnouncement = (boardId, announcementTitle, content) => axios.post(`${baseURL}/board/createPost`, {\n  boardId,\n  announcementTitle,\n  content\n});\nexport const getAnnouncement = boardId => axios.get(`${baseURL}/board/posts/${boardId}`);\n\n// get all announcements (for dashboard)\nexport const getAnnouncements = () => axios.get(`${baseURL}/announcements/all`);\n\n// Admin Functions\nexport const getReportedUsers = () => axios.get(`${baseURL}/admin/reportedUsers`);\nexport const banUser = userId => axios.post(`${baseURL}/admin/banUser/${userId}`);\nexport const getBannedUsers = () => axios.get(`${baseURL}/admin/bannedUsers`);\n\n// Fetch all user posts (for feed)\nexport const getAllUserPosts = () => axios.get(`${baseURL}/posts/all`);\n\n//Fetch posts for each type\nexport const getSellingPosts = () => axios.get(`${baseURL}/posts/sell`);\nexport const getBorrowPosts = () => axios.get(`${baseURL}/posts/borrow`);\nexport const getFreePosts = () => axios.get(`${baseURL}/posts/free`);\nexport const getLoanPost = () => axios.get(`${baseURL}/posts/loan`);\n\n// File/Image Upload\nexport const uploadImage = file => fetch(`${baseURL}/upload/image`, {\n  method: 'POST',\n  body: file\n});\n\n// Optional: Handle user reports\nexport const reportUser = (reportingUserId, reportedUserId, reason) => axios.post(`${baseURL}/user/report`, {\n  reportingUserId,\n  reportedUserId,\n  reason\n});\nexport default api;","map":{"version":3,"names":["axios","baseURL","api","create","userLoginAsStudent","email","password","post","userLoginAsBoard","userLoginAsAdmin","userLogout","authType","id","adminLogout","boardLogout","userRegister","name","surname","bio","verifyUser","verificationCode","params","token","getUser","get","getPost","postId","getImage","imageId","updateUser","userId","url","console","log","data","getBoards","createBoard","clubId","clubName","createPost","postType","createSellPost","formData","put","headers","createLostPost","postContent","image","title","type","createFoundPost","createLoanPost","content","category","loanPricePerTime","createFreePost","getUserPosts","getNotifications","markAsReadNotification","createAnnouncement","boardId","announcementTitle","getAnnouncement","getAnnouncements","getReportedUsers","banUser","getBannedUsers","getAllUserPosts","getSellingPosts","getBorrowPosts","getFreePosts","getLoanPost","uploadImage","file","fetch","method","body","reportUser","reportingUserId","reportedUserId","reason"],"sources":["/Users/anilaltuncu/OnlyBilkentSon2/OnlyBilkent/fronted/src/api/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\n\nexport const baseURL = 'http://localhost:8080';\n\nconst api = axios.create({\n    baseURL: baseURL\n  });\n  \n\n// Login / Logout\nexport const userLoginAsStudent = (email, password) => (\n  axios.post(`${baseURL}/api/login/asStudent`, {\n    email,\n    password\n  })\n);\n\nexport const userLoginAsBoard = (email, password) => (\n  axios.post(`${baseURL}/api/login/asBoard`, {\n    email,\n    password\n  })\n);\n\nexport const userLoginAsAdmin = (email, password) => (\n  axios.post(`${baseURL}/api/login/asAdmin`, {\n    email,\n    password\n  })\n);\n\nexport const userLogout = (authType, id) => (\n  axios.post(`${baseURL}/user/logout`)\n);\n\nexport const adminLogout = () => (\n  axios.post(`${baseURL}/admin/logout`)\n);\n\nexport const boardLogout = () => (\n  axios.post(`${baseURL}/board/logout`)\n);\n\n//User Registartion\nexport const userRegister = (email, password, name, surname, bio) => (\n  axios.post(`${baseURL}/registration/userReg`, { email, password, name, surname, bio })\n);\n\nexport const verifyUser = (verificationCode, email) => (\n  axios.post(`${baseURL}/registration/confirm`, null, {\n    params: { token: verificationCode, email }\n  })\n);\n\n// User info\nexport const getUser = (id) => (\n  axios.get(`${baseURL}/users/${id}`)\n);\n\nexport const getPost = (postId) => (\n  axios.get(`${baseURL}/posts/${postId}`)\n);\n\nexport const getImage = (imageId) => (\n  axios.get(`${baseURL}/image1/${imageId}`)\n);\n\nexport const updateUser = (userId, name, surname, password, bio) => {\n  const url = `http://localhost:8080/users/editUser/${userId}`;\n  console.log(password);\n  const data = { name, surname, password, bio };\n\n  // Assuming you're using Axios for HTTP requests\n  return axios.post(url, data);\n};\n\n// BoardAccounts\nexport const getBoards = () => (\n  axios.get(`${baseURL}/clubs`)\n);\n\nexport const createBoard = (userId, clubId, clubName) => (\n  axios.post(`${baseURL}/clubs/create`, {\n    userId,\n    clubId,\n    clubName\n  })\n);\n\n// User Posts\nexport const createPost = (postType, userId) => (\n  axios.post(`${baseURL}/posts/create/${userId}`, {\n    postType,\n    userId\n  })\n);\n\nexport const createSellPost = (postId, formData) => (\n  axios.put(`${baseURL}/posts/createSalePost/${postId}`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryqfDZNbBopJT4MiqA;charset=UTF-8'\n    }\n    \n  })\n);\n\nexport const createLostPost = (postId, postContent, image, title, type) => (\n  axios.post(`${baseURL}/posts/createLostPost/${postId}`, {\n    postId,\n    postContent,\n    image,\n    title, \n    type\n  })\n);\n\nexport const createFoundPost = (postId, postContent, image, title, type) => (\n  axios.post(`${baseURL}/posts/createFoundPost/${postId}`, {\n    postId,\n    postContent,\n    image,\n    title, \n    type\n  })\n);\n\nexport const createLoanPost = (postId, title, content, category, loanPricePerTime) => (\n  axios.put(`${baseURL}/posts/createLoanPost/${postId}`, {\n    postId,\n    title,\n    content,\n    category, \n    loanPricePerTime\n  })\n);\n\nexport const createFreePost = (postId, postContent, image, title, type) => (\n  axios.post(`${baseURL}/posts/createFreePost/${postId}`, {\n    postId,\n    postContent,\n    image,\n    title, \n    type\n  })\n);\n\nexport const getUserPosts = (userId) => (\n  axios.get(`${baseURL}/posts/user/${userId}`)\n);\n\n// Notifications\nexport const getNotifications = id => (\n  axios.get(`${baseURL}/notification/user/${id}`)\n);\n\nexport const markAsReadNotification = id => (\n  axios.post(`${baseURL}/notification/markRead/${id}`)\n);\n\n// Announcements\nexport const createAnnouncement = (boardId, announcementTitle, content) => (\n  axios.post(`${baseURL}/board/createPost`, {\n    boardId,\n    announcementTitle, \n    content\n  })\n);\n\nexport const getAnnouncement = (boardId) => (\n  axios.get(`${baseURL}/board/posts/${boardId}`)\n);\n\n// get all announcements (for dashboard)\nexport const getAnnouncements = () => (\n  axios.get(`${baseURL}/announcements/all`)\n);\n\n// Admin Functions\nexport const getReportedUsers = () => (\n  axios.get(`${baseURL}/admin/reportedUsers`)\n);\n\nexport const banUser = (userId) => (\n  axios.post(`${baseURL}/admin/banUser/${userId}`)\n);\n\nexport const getBannedUsers = () => (\n  axios.get(`${baseURL}/admin/bannedUsers`)\n);\n\n// Fetch all user posts (for feed)\nexport const getAllUserPosts = () => (\n  axios.get(`${baseURL}/posts/all`)\n);\n\n//Fetch posts for each type\nexport const getSellingPosts = () => (\n  axios.get(`${baseURL}/posts/sell`)\n);\n\nexport const getBorrowPosts = () => (\n  axios.get(`${baseURL}/posts/borrow`)\n);\n\nexport const getFreePosts = () => (\n  axios.get(`${baseURL}/posts/free`)\n);\n\nexport const getLoanPost = () => (\n  axios.get(`${baseURL}/posts/loan`)\n);\n\n// File/Image Upload\nexport const uploadImage = (file) => (\n  fetch(`${baseURL}/upload/image`, {\n    method: 'POST',\n    body: file\n  })\n);\n\n// Optional: Handle user reports\nexport const reportUser = (reportingUserId, reportedUserId, reason) => (\n  axios.post(`${baseURL}/user/report`, {\n    reportingUserId,\n    reportedUserId,\n    reason\n  })\n);\n\nexport default api\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}