{"ast":null,"code":"var _jsxFileName = \"/Users/zehraiyigun/OnlyBilkent/fronted/src/components/auth/RegistrationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { userRegister } from '../../api/axiosConfig';\nimport '../../themes/styles.css'; // Assuming you have a styles.css file with your custom styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [repassword, setRePassword] = useState('');\n  const [name, setName] = useState('');\n  const [surname, setSurname] = useState('');\n  const [error, setError] = useState(''); // State to handle any error\n\n  const [verificationCode, setVerificationCode] = useState('');\n  const [isRegistered, setIsRegistered] = useState(false);\n  const navigate = useNavigate();\n  const handleRegister = async event => {\n    event.preventDefault();\n\n    //checks if it is a bilkent email\n    if (!email.endsWith('@ug.bilkent.edu.tr') && !email.endsWith('@alumni.bilkent.edu.tr')) {\n      alert('Please use a Bilkent email address');\n      return;\n    }\n    //checks if the confirm password is correct\n    if (password !== repassword) {\n      alert(\"Passwords do not match!\");\n      return;\n    }\n    // Registering the user \n    try {\n      const response = await userRegister(email, password, name, surname, bio);\n      console.log(\"Registered!!\");\n      navigate('/verification-page'); // Navigates to verification page for email verification\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'An error occurred during registration');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleRegister,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            className: \"form-control mb-2\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            placeholder: \"Bilkent Mail\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            className: \"form-control mb-2\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            placeholder: \"Password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"repassword\",\n            className: \"form-control mb-2\",\n            value: repassword,\n            onChange: e => setRePassword(e.target.value),\n            placeholder: \"Re-type Password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            className: \"form-control mb-2\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            placeholder: \"Name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"surname\",\n            className: \"form-control mb-2\",\n            value: fsurname,\n            onChange: e => setRePassword(e.target.value),\n            placeholder: \"Surname\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"bio\",\n            className: \"form-control mb-2\",\n            value: bio,\n            onChange: e => setBio(e.target.value),\n            placeholder: \"Introduce Yourself\",\n            rows: \"5\",\n            style: {\n              resize: 'both'\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-outline-secondary\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(RegisterPage, \"/JB5QHzs3ouc/tJ8dkEgl3iw7wE=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useNavigate","userRegister","jsxDEV","_jsxDEV","Fragment","_Fragment","RegisterPage","_s","email","setEmail","password","setPassword","repassword","setRePassword","name","setName","surname","setSurname","error","setError","verificationCode","setVerificationCode","isRegistered","setIsRegistered","navigate","handleRegister","event","preventDefault","endsWith","alert","response","bio","console","log","err","_err$response","_err$response$data","data","message","children","className","onSubmit","type","value","onChange","e","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","fsurname","setBio","rows","style","resize","_c","$RefreshReg$"],"sources":["/Users/zehraiyigun/OnlyBilkent/fronted/src/components/auth/RegistrationPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { userRegister } from '../../api/axiosConfig';\nimport '../../themes/styles.css'; // Assuming you have a styles.css file with your custom styles\n\nconst RegisterPage = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [repassword, setRePassword] = useState('');\n    const [name, setName] = useState('');\n    const [surname, setSurname] = useState('');\n    const [error, setError] = useState(''); // State to handle any error\n\n\n    const [verificationCode, setVerificationCode] = useState('');\n    const [isRegistered, setIsRegistered] = useState(false);\n\n    const navigate = useNavigate();\n\n    const handleRegister = async (event) => {\n        event.preventDefault();\n\n        //checks if it is a bilkent email\n        if (!email.endsWith('@ug.bilkent.edu.tr') && !email.endsWith('@alumni.bilkent.edu.tr')) {\n          alert('Please use a Bilkent email address');\n          return;\n        }\n        //checks if the confirm password is correct\n        if (password !== repassword) {\n            alert(\"Passwords do not match!\");\n            return;\n        }\n        // Registering the user \n        try {\n            const response = await userRegister(email, password, name, surname, bio);\n            console.log(\"Registered!!\")\n            navigate('/verification-page'); // Navigates to verification page for email verification\n        } catch (err) {\n            setError(err.response?.data?.message || 'An error occurred during registration');\n        }\n    };\n\n    return (\n        <>\n            {/* Include your Navbar here as a separate component */}\n            <div className=\"container\">\n                <form onSubmit={handleRegister}>\n                    <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3\">\n                        {/* Other form fields */}\n                        <input \n                            type=\"email\" \n                            name=\"email\"\n                            className=\"form-control mb-2\" \n                            value={email} \n                            onChange={(e) => setEmail(e.target.value)} \n                            placeholder=\"Bilkent Mail\" \n                            required \n                        />\n                        <input \n                            type=\"password\" \n                            name=\"password\"\n                            className=\"form-control mb-2\" \n                            value={password} \n                            onChange={(e) => setPassword(e.target.value)} \n                            placeholder=\"Password\" \n                            required \n                        />\n                        <input \n                            type=\"password\" \n                            name=\"repassword\"\n                            className=\"form-control mb-2\" \n                            value={repassword} \n                            onChange={(e) => setRePassword(e.target.value)} \n                            placeholder=\"Re-type Password\" \n                            required \n                        />\n                        <input \n                            type=\"text\" \n                            name=\"name\"\n                            className=\"form-control mb-2\" \n                            value={name} \n                            onChange={(e) => setName(e.target.value)} \n                            placeholder=\"Name\" \n                            required \n                        />\n                        <input \n                            type=\"text\" \n                            name=\"surname\"\n                            className=\"form-control mb-2\" \n                            value={fsurname} \n                            onChange={(e) => setRePassword(e.target.value)} \n                            placeholder=\"Surname\" \n                            required \n                        />\n                        <textarea \n                            name=\"bio\"\n                            className=\"form-control mb-2\"\n                            value={bio}\n                            onChange={(e) => setBio(e.target.value)}\n                            placeholder=\"Introduce Yourself\"\n                            rows=\"5\"\n                            style={{ resize: 'both' }}\n                            required\n                        ></textarea>\n                        <button type=\"submit\" className=\"btn btn-outline-secondary\">Register</button>\n                    </div>\n                </form>\n            </div>\n        </>\n    );\n};\n\nexport default RegisterPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,QAAQ,uBAAuB;AACpD,OAAO,yBAAyB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAGxC,MAAM,CAACqB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMyB,QAAQ,GAAGxB,WAAW,CAAC,CAAC;EAE9B,MAAMyB,cAAc,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;;IAEtB;IACA,IAAI,CAACnB,KAAK,CAACoB,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAACpB,KAAK,CAACoB,QAAQ,CAAC,wBAAwB,CAAC,EAAE;MACtFC,KAAK,CAAC,oCAAoC,CAAC;MAC3C;IACF;IACA;IACA,IAAInB,QAAQ,KAAKE,UAAU,EAAE;MACzBiB,KAAK,CAAC,yBAAyB,CAAC;MAChC;IACJ;IACA;IACA,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM7B,YAAY,CAACO,KAAK,EAAEE,QAAQ,EAAEI,IAAI,EAAEE,OAAO,EAAEe,GAAG,CAAC;MACxEC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC3BT,QAAQ,CAAC,oBAAoB,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC,OAAOU,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACVjB,QAAQ,CAAC,EAAAgB,aAAA,GAAAD,GAAG,CAACJ,QAAQ,cAAAK,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcE,IAAI,cAAAD,kBAAA,uBAAlBA,kBAAA,CAAoBE,OAAO,KAAI,uCAAuC,CAAC;IACpF;EACJ,CAAC;EAED,oBACInC,OAAA,CAAAE,SAAA;IAAAkC,QAAA,eAEIpC,OAAA;MAAKqC,SAAS,EAAC,WAAW;MAAAD,QAAA,eACtBpC,OAAA;QAAMsC,QAAQ,EAAEhB,cAAe;QAAAc,QAAA,eAC3BpC,OAAA;UAAKqC,SAAS,EAAC,gDAAgD;UAAAD,QAAA,gBAE3DpC,OAAA;YACIuC,IAAI,EAAC,OAAO;YACZ5B,IAAI,EAAC,OAAO;YACZ0B,SAAS,EAAC,mBAAmB;YAC7BG,KAAK,EAAEnC,KAAM;YACboC,QAAQ,EAAGC,CAAC,IAAKpC,QAAQ,CAACoC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC1CI,WAAW,EAAC,cAAc;YAC1BC,QAAQ;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACFjD,OAAA;YACIuC,IAAI,EAAC,UAAU;YACf5B,IAAI,EAAC,UAAU;YACf0B,SAAS,EAAC,mBAAmB;YAC7BG,KAAK,EAAEjC,QAAS;YAChBkC,QAAQ,EAAGC,CAAC,IAAKlC,WAAW,CAACkC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC7CI,WAAW,EAAC,UAAU;YACtBC,QAAQ;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACFjD,OAAA;YACIuC,IAAI,EAAC,UAAU;YACf5B,IAAI,EAAC,YAAY;YACjB0B,SAAS,EAAC,mBAAmB;YAC7BG,KAAK,EAAE/B,UAAW;YAClBgC,QAAQ,EAAGC,CAAC,IAAKhC,aAAa,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC/CI,WAAW,EAAC,kBAAkB;YAC9BC,QAAQ;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACFjD,OAAA;YACIuC,IAAI,EAAC,MAAM;YACX5B,IAAI,EAAC,MAAM;YACX0B,SAAS,EAAC,mBAAmB;YAC7BG,KAAK,EAAE7B,IAAK;YACZ8B,QAAQ,EAAGC,CAAC,IAAK9B,OAAO,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YACzCI,WAAW,EAAC,MAAM;YAClBC,QAAQ;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACFjD,OAAA;YACIuC,IAAI,EAAC,MAAM;YACX5B,IAAI,EAAC,SAAS;YACd0B,SAAS,EAAC,mBAAmB;YAC7BG,KAAK,EAAEU,QAAS;YAChBT,QAAQ,EAAGC,CAAC,IAAKhC,aAAa,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC/CI,WAAW,EAAC,SAAS;YACrBC,QAAQ;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACFjD,OAAA;YACIW,IAAI,EAAC,KAAK;YACV0B,SAAS,EAAC,mBAAmB;YAC7BG,KAAK,EAAEZ,GAAI;YACXa,QAAQ,EAAGC,CAAC,IAAKS,MAAM,CAACT,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YACxCI,WAAW,EAAC,oBAAoB;YAChCQ,IAAI,EAAC,GAAG;YACRC,KAAK,EAAE;cAAEC,MAAM,EAAE;YAAO,CAAE;YAC1BT,QAAQ;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACZjD,OAAA;YAAQuC,IAAI,EAAC,QAAQ;YAACF,SAAS,EAAC,2BAA2B;YAAAD,QAAA,EAAC;UAAQ;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5E;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC,gBACR,CAAC;AAEX,CAAC;AAAC7C,EAAA,CAzGID,YAAY;EAAA,QAYGN,WAAW;AAAA;AAAA0D,EAAA,GAZ1BpD,YAAY;AA2GlB,eAAeA,YAAY;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}