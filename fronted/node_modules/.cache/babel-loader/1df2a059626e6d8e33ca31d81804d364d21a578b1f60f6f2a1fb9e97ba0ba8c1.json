{"ast":null,"code":"import axios from 'axios';\nexport const baseURL = 'http://localhost:8080';\nconst api = axios.create({\n  baseURL: baseURL\n});\n\n// Login / Logout\nexport const userLogin = (email, password) => axios.post(`${baseURL}/api/login`, {\n  email,\n  password\n});\nexport const userLogout = (authType, id) => axios.post(`${baseURL}/user/logout`);\nexport const adminLogin = (email, password) => axios.post(`${baseURL}/admin/login?email=${email}&password=${password}`);\nexport const adminLogout = () => axios.post(`${baseURL}/admin/logout`);\n\n//User Registartion\nexport const userRegister = (email, password, name, surname, bio, profilePic) => axios.post(`${baseURL}/registration`);\n\n// User info\nexport const getUser = id => axios.get(`${baseURL}/${id}`);\n\n// BoardAccounts\nexport const getBoards = () => axios.get(`${baseURL}/clubs`);\nexport const createBoard = (userId, clubId, clubName) => axios.post(`${baseURL}/clubs/create`, {\n  userId,\n  clubId,\n  clubName\n});\n\n// User Posts\nexport const createUserPost = (userId, postContent, image, title, type) => axios.post(`${baseURL}/posts/create`, {\n  userId,\n  postContent,\n  image,\n  title,\n  type\n});\n\n// Notifications\nexport const getNotifications = id => axios.get(`${baseURL}/notification/user/${id}`);\nexport const markAsReadNotification = id => axios.post(`${baseURL}/notification/markRead/${id}`);\nexport const getUserPosts = userId => axios.get(`${baseURL}/posts/user/${userId}`);\n\n// Announcements\nexport const createAnnouncement = (boardId, announcementTitle, content) => axios.post(`${baseURL}/board/createPost`, {\n  boardId,\n  announcementTitle,\n  content\n});\nexport const getAnnouncement = boardId => axios.get(`${baseURL}/board/posts/${boardId}`);\n\n// Admin Functions\nexport const getReportedUsers = () => axios.get(`${baseURL}/admin/reportedUsers`);\nexport const banUser = userId => axios.post(`${baseURL}/admin/banUser/${userId}`);\nexport const getBannedUsers = () => axios.get(`${baseURL}/admin/bannedUsers`);\n\n// Fetch all user posts (for feed)\nexport const getAllUserPosts = () => axios.get(`${baseURL}/posts/all`);\n\n//Fetch posts for each type\nexport const getSellingPosts = () => axios.get(`${baseURL}/posts/sell`);\nexport const getBorrowPosts = () => axios.get(`${baseURL}/posts/borrow`);\nexport const getFreePosts = () => axios.get(`${baseURL}/posts/free`);\n\n// File/Image Upload\nexport const uploadImage = file => fetch(`${baseURL}/upload/image`, {\n  method: 'POST',\n  body: file\n});\n\n// Optional: Handle user reports\nexport const reportUser = (reportingUserId, reportedUserId, reason) => axios.post(`${baseURL}/user/report`, {\n  reportingUserId,\n  reportedUserId,\n  reason\n});\nexport default api;","map":{"version":3,"names":["axios","baseURL","api","create","userLogin","email","password","post","userLogout","authType","id","adminLogin","adminLogout","userRegister","name","surname","bio","profilePic","getUser","get","getBoards","createBoard","userId","clubId","clubName","createUserPost","postContent","image","title","type","getNotifications","markAsReadNotification","getUserPosts","createAnnouncement","boardId","announcementTitle","content","getAnnouncement","getReportedUsers","banUser","getBannedUsers","getAllUserPosts","getSellingPosts","getBorrowPosts","getFreePosts","uploadImage","file","fetch","method","body","reportUser","reportingUserId","reportedUserId","reason"],"sources":["/Users/zehraiyigun/OnlyBilkent/fronted/src/api/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\n\nexport const baseURL = 'http://localhost:8080';\n\nconst api = axios.create({\n    baseURL: baseURL\n  });\n  \n\n// Login / Logout\nexport const userLogin = (email, password) => (\n  axios.post(`${baseURL}/api/login`, {\n    email,\n    password\n  })\n);\n\nexport const userLogout = (authType, id) => (\n  axios.post(`${baseURL}/user/logout`)\n);\n\nexport const adminLogin = (email, password) => (\n  axios.post(`${baseURL}/admin/login?email=${email}&password=${password}`)\n);\n\nexport const adminLogout = () => (\n  axios.post(`${baseURL}/admin/logout`)\n);\n\n//User Registartion\nexport const userRegister = (email, password, name, surname, bio, profilePic) => (\n  axios.post(`${baseURL}/registration`)\n);\n\n// User info\nexport const getUser = (id) => (\n  axios.get(`${baseURL}/${id}`)\n);\n\n// BoardAccounts\nexport const getBoards = () => (\n  axios.get(`${baseURL}/clubs`)\n);\n\nexport const createBoard = (userId, clubId, clubName) => (\n  axios.post(`${baseURL}/clubs/create`, {\n    userId,\n    clubId,\n    clubName\n  })\n);\n\n// User Posts\nexport const createUserPost = (userId, postContent, image, title, type) => (\n  axios.post(`${baseURL}/posts/create`, {\n    userId,\n    postContent,\n    image,\n    title, \n    type\n  })\n);\n\n// Notifications\nexport const getNotifications = id => (\n  axios.get(`${baseURL}/notification/user/${id}`)\n);\n\nexport const markAsReadNotification = id => (\n  axios.post(`${baseURL}/notification/markRead/${id}`)\n);\n\nexport const getUserPosts = (userId) => (\n  axios.get(`${baseURL}/posts/user/${userId}`)\n);\n\n\n// Announcements\nexport const createAnnouncement = (boardId, announcementTitle, content) => (\n  axios.post(`${baseURL}/board/createPost`, {\n    boardId,\n    announcementTitle, \n    content\n  })\n);\n\nexport const getAnnouncement = (boardId) => (\n  axios.get(`${baseURL}/board/posts/${boardId}`)\n);\n\n// Admin Functions\nexport const getReportedUsers = () => (\n  axios.get(`${baseURL}/admin/reportedUsers`)\n);\n\nexport const banUser = (userId) => (\n  axios.post(`${baseURL}/admin/banUser/${userId}`)\n);\n\nexport const getBannedUsers = () => (\n  axios.get(`${baseURL}/admin/bannedUsers`)\n);\n\n// Fetch all user posts (for feed)\nexport const getAllUserPosts = () => (\n  axios.get(`${baseURL}/posts/all`)\n);\n\n//Fetch posts for each type\nexport const getSellingPosts = () => (\n  axios.get(`${baseURL}/posts/sell`)\n);\n\nexport const getBorrowPosts = () => (\n  axios.get(`${baseURL}/posts/borrow`)\n);\n\nexport const getFreePosts = () => (\n  axios.get(`${baseURL}/posts/free`)\n);\n\n// File/Image Upload\nexport const uploadImage = (file) => (\n  fetch(`${baseURL}/upload/image`, {\n    method: 'POST',\n    body: file\n  })\n);\n\n// Optional: Handle user reports\nexport const reportUser = (reportingUserId, reportedUserId, reason) => (\n  axios.post(`${baseURL}/user/report`, {\n    reportingUserId,\n    reportedUserId,\n    reason\n  })\n);\n\nexport default api\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}