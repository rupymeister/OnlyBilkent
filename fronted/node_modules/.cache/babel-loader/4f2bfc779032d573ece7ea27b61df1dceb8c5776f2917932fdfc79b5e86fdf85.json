{"ast":null,"code":"import axios from 'axios';\nexport const baseURL = 'http://localhost:8080';\nconst api = axios.create({\n  baseURL: baseURL\n});\n\n// Login / Logout\nexport const userLoginAsStudent = (email, password) => axios.post(`${baseURL}/api/login/asStudent`, {\n  email,\n  password\n});\nexport const userLoginAsBoard = (email, password) => axios.post(`${baseURL}/api/login/asBoard`, {\n  email,\n  password\n});\nexport const userLoginAsAdmin = (email, password) => axios.post(`${baseURL}/api/login/asAdmin`, {\n  email,\n  password\n});\nexport const userLogout = (authType, id) => axios.post(`${baseURL}/user/logout`);\nexport const adminLogin = (email, password) => axios.post(`${baseURL}/admin/login`);\nexport const adminLogout = () => axios.post(`${baseURL}/admin/logout`);\nexport const boardLogin = (email, password) => axios.post(`${baseURL}/board/login`);\nexport const boardLogout = () => axios.post(`${baseURL}/board/logout`);\n\n//User Registartion\nexport const userRegister = (email, password, name, surname, bio) => axios.post(`${baseURL}/registration/userReg`, {\n  email,\n  password,\n  name,\n  surname,\n  bio\n});\nexport const verifyUser = (verificationCode, email) => axios.post(`${baseURL}/registration/confirm`, null, {\n  params: {\n    token: verificationCode,\n    email\n  }\n});\n\n// User info\nexport const getUser = id => axios.get(`${baseURL}/users/${id}`);\nexport const updateUser = (id, name, surname, p1, p2, bio) => axios.put(`${baseURL}/users/editUser/${id}`, {\n  name,\n  surname,\n  p1,\n  p2,\n  bio\n});\n\n// BoardAccounts\nexport const getBoards = () => axios.get(`${baseURL}/clubs`);\nexport const createBoard = (userId, clubId, clubName) => axios.post(`${baseURL}/clubs/create`, {\n  userId,\n  clubId,\n  clubName\n});\n\n// User Posts\nexport const createUserPost = (userId, postContent, image, title, type) => axios.post(`${baseURL}/posts/create`, {\n  userId,\n  postContent,\n  image,\n  title,\n  type\n});\nexport const getUserPosts = userId => axios.get(`${baseURL}/posts/user/${userId}`);\n\n// Notifications\nexport const getNotifications = id => axios.get(`${baseURL}/notification/user/${id}`);\nexport const markAsReadNotification = id => axios.post(`${baseURL}/notification/markRead/${id}`);\n\n// Announcements\nexport const createAnnouncement = (boardId, announcementTitle, content) => axios.post(`${baseURL}/board/createPost`, {\n  boardId,\n  announcementTitle,\n  content\n});\nexport const getAnnouncement = boardId => axios.get(`${baseURL}/board/posts/${boardId}`);\n\n// get all announcements (for dashboard)\nexport const getAnnouncements = () => axios.get(`${baseURL}/posts`);\n\n// Admin Functions\nexport const getReportedUsers = () => axios.get(`${baseURL}/admin/reportedUsers`);\nexport const banUser = userId => axios.post(`${baseURL}/admin/banUser/${userId}`);\nexport const getBannedUsers = () => axios.get(`${baseURL}/admin/bannedUsers`);\n\n// Fetch all user posts (for feed)\nexport const getAllUserPosts = () => axios.get(`${baseURL}/posts/all`);\n\n//Fetch posts for each type\nexport const getSellingPosts = () => axios.get(`${baseURL}/posts/sell`);\nexport const getBorrowPosts = () => axios.get(`${baseURL}/posts/borrow`);\nexport const getFreePosts = () => axios.get(`${baseURL}/posts/free`);\n\n// File/Image Upload\nexport const uploadImage = file => fetch(`${baseURL}/upload/image`, {\n  method: 'POST',\n  body: file\n});\n\n// Optional: Handle user reports\nexport const reportUser = (reportingUserId, reportedUserId, reason) => axios.post(`${baseURL}/user/report`, {\n  reportingUserId,\n  reportedUserId,\n  reason\n});\nexport default api;","map":{"version":3,"names":["axios","baseURL","api","create","userLoginAsStudent","email","password","post","userLoginAsBoard","userLoginAsAdmin","userLogout","authType","id","adminLogin","adminLogout","boardLogin","boardLogout","userRegister","name","surname","bio","verifyUser","verificationCode","params","token","getUser","get","updateUser","p1","p2","put","getBoards","createBoard","userId","clubId","clubName","createUserPost","postContent","image","title","type","getUserPosts","getNotifications","markAsReadNotification","createAnnouncement","boardId","announcementTitle","content","getAnnouncement","getAnnouncements","getReportedUsers","banUser","getBannedUsers","getAllUserPosts","getSellingPosts","getBorrowPosts","getFreePosts","uploadImage","file","fetch","method","body","reportUser","reportingUserId","reportedUserId","reason"],"sources":["/Users/anilaltuncu/Desktop/CS319Project/OnlyBilkent/fronted/src/api/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\n\nexport const baseURL = 'http://localhost:8080';\n\nconst api = axios.create({\n    baseURL: baseURL\n  });\n  \n\n// Login / Logout\nexport const userLoginAsStudent = (email, password) => (\n  axios.post(`${baseURL}/api/login/asStudent`, {\n    email,\n    password\n  })\n);\n\nexport const userLoginAsBoard = (email, password) => (\n  axios.post(`${baseURL}/api/login/asBoard`, {\n    email,\n    password\n  })\n);\n\nexport const userLoginAsAdmin = (email, password) => (\n  axios.post(`${baseURL}/api/login/asAdmin`, {\n    email,\n    password\n  })\n);\n\nexport const userLogout = (authType, id) => (\n  axios.post(`${baseURL}/user/logout`)\n);\n\nexport const adminLogin = (email, password) => (\n  axios.post(`${baseURL}/admin/login`)\n);\n\nexport const adminLogout = () => (\n  axios.post(`${baseURL}/admin/logout`)\n);\n\nexport const boardLogin = (email, password) => (\n  axios.post(`${baseURL}/board/login`)\n);\n\nexport const boardLogout = () => (\n  axios.post(`${baseURL}/board/logout`)\n);\n\n//User Registartion\nexport const userRegister = (email, password, name, surname, bio) => (\n  axios.post(`${baseURL}/registration/userReg`, { email, password, name, surname, bio })\n);\n\nexport const verifyUser = (verificationCode, email) => (\n  axios.post(`${baseURL}/registration/confirm`, null, {\n    params: { token: verificationCode, email }\n  })\n);\n\n// User info\nexport const getUser = (id) => (\n  axios.get(`${baseURL}/users/${id}`)\n);\n\nexport const updateUser = (id, name, surname, p1, p2, bio) => (\n  axios.put(`${baseURL}/users/editUser/${id}`, { name , surname, p1, p2, bio })\n);\n\n// BoardAccounts\nexport const getBoards = () => (\n  axios.get(`${baseURL}/clubs`)\n);\n\nexport const createBoard = (userId, clubId, clubName) => (\n  axios.post(`${baseURL}/clubs/create`, {\n    userId,\n    clubId,\n    clubName\n  })\n);\n\n// User Posts\nexport const createUserPost = (userId, postContent, image, title, type) => (\n  axios.post(`${baseURL}/posts/create`, {\n    userId,\n    postContent,\n    image,\n    title, \n    type\n  })\n);\n\nexport const getUserPosts = (userId) => (\n  axios.get(`${baseURL}/posts/user/${userId}`)\n);\n\n// Notifications\nexport const getNotifications = id => (\n  axios.get(`${baseURL}/notification/user/${id}`)\n);\n\nexport const markAsReadNotification = id => (\n  axios.post(`${baseURL}/notification/markRead/${id}`)\n);\n\n// Announcements\nexport const createAnnouncement = (boardId, announcementTitle, content) => (\n  axios.post(`${baseURL}/board/createPost`, {\n    boardId,\n    announcementTitle, \n    content\n  })\n);\n\nexport const getAnnouncement = (boardId) => (\n  axios.get(`${baseURL}/board/posts/${boardId}`)\n);\n\n// get all announcements (for dashboard)\nexport const getAnnouncements = () => (\n  axios.get(`${baseURL}/posts`)\n)\n\n// Admin Functions\nexport const getReportedUsers = () => (\n  axios.get(`${baseURL}/admin/reportedUsers`)\n);\n\nexport const banUser = (userId) => (\n  axios.post(`${baseURL}/admin/banUser/${userId}`)\n);\n\nexport const getBannedUsers = () => (\n  axios.get(`${baseURL}/admin/bannedUsers`)\n);\n\n// Fetch all user posts (for feed)\nexport const getAllUserPosts = () => (\n  axios.get(`${baseURL}/posts/all`)\n);\n\n//Fetch posts for each type\nexport const getSellingPosts = () => (\n  axios.get(`${baseURL}/posts/sell`)\n);\n\nexport const getBorrowPosts = () => (\n  axios.get(`${baseURL}/posts/borrow`)\n);\n\nexport const getFreePosts = () => (\n  axios.get(`${baseURL}/posts/free`)\n);\n\n// File/Image Upload\nexport const uploadImage = (file) => (\n  fetch(`${baseURL}/upload/image`, {\n    method: 'POST',\n    body: file\n  })\n);\n\n// Optional: Handle user reports\nexport const reportUser = (reportingUserId, reportedUserId, reason) => (\n  axios.post(`${baseURL}/user/report`, {\n    reportingUserId,\n    reportedUserId,\n    reason\n  })\n);\n\nexport default api\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}