{"ast":null,"code":"var _jsxFileName = \"/Users/zehraiyigun/OnlyBilkent/fronted/src/components/layout/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getAnnouncements } from '../../api/axios.Config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [categories, setCategories] = useState([\n  // Assuming these are your categories; replace with API call if needed\n  {\n    id: 1,\n    name: 'Selling'\n  }, {\n    id: 2,\n    name: 'Borrowing'\n  }, {\n    id: 3,\n    name: 'Lost and Found'\n  }]);\n  const [announcements, setAnnouncements] = useState([]);\n  const [filteredAnnouncements, setFilteredAnnouncements] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    const fetchAnnouncements = async () => {\n      try {\n        const response = await getAnnouncements();\n        setAnnouncements(response.data);\n        setFilteredAnnouncements(response.data); // Initialize filtered announcements\n      } catch (error) {\n        console.error('Error fetching announcements:', error);\n      }\n    };\n    fetchAnnouncements();\n  }, []);\n  const handleSearch = event => {\n    const searchValue = event.target.value;\n    setSearchTerm(searchValue);\n    const filtered = announcements.filter(announcement => announcement.title.toLowerCase().includes(searchValue.toLowerCase()));\n    setFilteredAnnouncements(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/posts/${category.name}`,\n              children: category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)\n          }, category.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"announcements\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Announcements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search Announcements...\",\n          value: searchTerm,\n          onChange: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: filteredAnnouncements.map(announcement => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: announcement.title\n          }, announcement.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"nO4K7ckLaPvS95V+MNcwD5DEVpM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","getAnnouncements","jsxDEV","_jsxDEV","Dashboard","_s","categories","setCategories","id","name","announcements","setAnnouncements","filteredAnnouncements","setFilteredAnnouncements","searchTerm","setSearchTerm","fetchAnnouncements","response","data","error","console","handleSearch","event","searchValue","target","value","filtered","filter","announcement","title","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","category","to","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/Users/zehraiyigun/OnlyBilkent/fronted/src/components/layout/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getAnnouncements } from '../../api/axios.Config';\n\nfunction Dashboard() {\n  const [categories, setCategories] = useState([\n    // Assuming these are your categories; replace with API call if needed\n    { id: 1, name: 'Selling' },\n    { id: 2, name: 'Borrowing' },\n    { id: 3, name: 'Lost and Found' }\n  ]);\n  const [announcements, setAnnouncements] = useState([]);\n  const [filteredAnnouncements, setFilteredAnnouncements] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    const fetchAnnouncements = async () => {\n      try {\n        const response = await getAnnouncements();\n        setAnnouncements(response.data);\n        setFilteredAnnouncements(response.data); // Initialize filtered announcements\n      } catch (error) {\n        console.error('Error fetching announcements:', error);\n      }\n    };\n\n    fetchAnnouncements();\n  }, []);\n\n  const handleSearch = (event) => {\n    const searchValue = event.target.value;\n    setSearchTerm(searchValue);\n    const filtered = announcements.filter(announcement => \n      announcement.title.toLowerCase().includes(searchValue.toLowerCase())\n    );\n    setFilteredAnnouncements(filtered);\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <aside className=\"sidebar\">\n        <div className=\"categories\">\n          <h2>Categories</h2>\n          <ul>\n            {categories.map(category => (\n              <li key={category.id}>\n                <Link to={`/posts/${category.name}`}>{category.name}</Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"announcements\">\n          <h2>Announcements</h2>\n          <input \n            type=\"text\" \n            placeholder=\"Search Announcements...\" \n            value={searchTerm} \n            onChange={handleSearch} \n          />\n          <ul>\n            {filteredAnnouncements.map(announcement => (\n              <li key={announcement.id}>{announcement.title}</li>\n            ))}\n          </ul>\n        </div>\n      </aside>\n      {/* Other content can be added here */}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,gBAAgB,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC;EAC3C;EACA;IAAEU,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAU,CAAC,EAC1B;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAY,CAAC,EAC5B;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAiB,CAAC,CAClC,CAAC;EACF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACc,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtE,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMiB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMhB,gBAAgB,CAAC,CAAC;QACzCU,gBAAgB,CAACM,QAAQ,CAACC,IAAI,CAAC;QAC/BL,wBAAwB,CAACI,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;MAC3C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAEDH,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAMC,WAAW,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACtCV,aAAa,CAACQ,WAAW,CAAC;IAC1B,MAAMG,QAAQ,GAAGhB,aAAa,CAACiB,MAAM,CAACC,YAAY,IAChDA,YAAY,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACR,WAAW,CAACO,WAAW,CAAC,CAAC,CACrE,CAAC;IACDjB,wBAAwB,CAACa,QAAQ,CAAC;EACpC,CAAC;EAED,oBACEvB,OAAA;IAAK6B,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxB9B,OAAA;MAAO6B,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACxB9B,OAAA;QAAK6B,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB9B,OAAA;UAAA8B,QAAA,EAAI;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnBlC,OAAA;UAAA8B,QAAA,EACG3B,UAAU,CAACgC,GAAG,CAACC,QAAQ,iBACtBpC,OAAA;YAAA8B,QAAA,eACE9B,OAAA,CAACH,IAAI;cAACwC,EAAE,EAAG,UAASD,QAAQ,CAAC9B,IAAK,EAAE;cAAAwB,QAAA,EAAEM,QAAQ,CAAC9B;YAAI;cAAAyB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC,GADpDE,QAAQ,CAAC/B,EAAE;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEhB,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACNlC,OAAA;QAAK6B,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5B9B,OAAA;UAAA8B,QAAA,EAAI;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBlC,OAAA;UACEsC,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,yBAAyB;UACrCjB,KAAK,EAAEX,UAAW;UAClB6B,QAAQ,EAAEtB;QAAa;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,eACFlC,OAAA;UAAA8B,QAAA,EACGrB,qBAAqB,CAAC0B,GAAG,CAACV,YAAY,iBACrCzB,OAAA;YAAA8B,QAAA,EAA2BL,YAAY,CAACC;UAAK,GAApCD,YAAY,CAACpB,EAAE;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA0B,CACnD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEV;AAAChC,EAAA,CAjEQD,SAAS;AAAAwC,EAAA,GAATxC,SAAS;AAmElB,eAAeA,SAAS;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}